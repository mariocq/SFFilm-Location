;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-xingguang" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M495.616 450.56q8.192 6.144 26.624 7.68t40.96 0.512 47.616-2.048 46.592 1.024 37.888 8.704 21.504 20.992-3.584 28.16-26.112 26.624-39.424 25.6-41.984 25.088-34.816 24.576-17.92 23.552q-3.072 12.288 1.024 31.232t11.776 41.472 15.872 46.08 12.8 44.032 3.584 36.352-11.264 23.04q-11.264 7.168-26.112 1.536t-31.744-17.408-35.84-27.648-36.864-30.208-34.816-24.576-31.232-10.24q-21.504 0-49.152 19.968t-56.32 42.496-54.272 36.352-41.984 1.536q-11.264-8.192-11.264-24.064t6.144-36.352 16.384-43.008 18.432-44.032 12.8-40.96 0.512-32.768-18.944-26.624-34.304-26.624-39.936-26.624-36.352-26.624-24.576-26.624-3.584-26.624 20.992-18.432 36.864-6.144 46.08 0.512 48.128 3.072 41.984 0.512 29.184-7.168q15.36-9.216 27.648-41.472t24.064-67.584 24.064-62.976 27.648-27.648q10.24 0 18.944 13.312t16.384 33.792 14.848 45.056 14.336 47.104 14.848 40.448 15.872 24.064zM885.76 231.424q6.144 5.12 24.064 4.608t37.376-1.024 35.84 2.56 20.48 14.336-8.192 22.016-29.184 20.48-32.256 19.456-17.408 18.944q-3.072 9.216 2.56 27.136t11.776 36.352 9.216 33.792-6.144 21.504q-9.216 5.12-22.528-3.072t-27.648-20.48-28.672-23.552-25.6-11.264-26.112 10.752-29.696 22.528-28.672 19.456-23.04 0.512q-9.216-6.144-5.12-21.504t11.776-32.768 13.824-34.816 3.072-27.648q-4.096-10.24-18.944-20.992t-30.72-21.504-27.136-21.504-7.168-20.992 19.968-12.288 34.816-1.024 36.864 2.048 26.112-4.096 14.848-22.016 12.8-35.328 12.8-33.28 14.848-14.848 14.848 14.848 12.288 33.792 11.264 36.352 12.8 22.528z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-dianshi" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M247.936 404.544l87.167 0L296.32 622.656l98.368 0 37.952-218.112 88 0 13.633-78.016L261.568 326.528 247.936 404.544 247.936 404.544zM671.936 523.264l-16.96-196.736-98.752 0 49.601 296.128 98.367 0 155.776-296.128L761.6 326.528 671.936 523.264 671.936 523.264zM670.72 850.176 355.2 850.176c-15.36 0-27.84 12.416-27.84 27.712S339.84 905.6 355.2 905.6l315.52 0c15.36 0 27.84-12.416 27.84-27.712S686.144 850.176 670.72 850.176zM977.855 129.344 43.456 129.344c-20.48 0-32.768 12.224-32.768 32.704l0 596.416c0 20.416 20.48 32.704 40.96 32.704l926.208 0c20.48 0 32.769-12.224 32.769-32.704L1010.625 162.048C1010.688 141.632 998.4 129.344 977.855 129.344zM961.472 725.76c0 10.24-6.144 16.32-16.384 16.32L76.224 742.08c-10.24 0-16.384-6.144-16.384-16.32L59.84 194.688c0-10.24 6.144-16.32 16.384-16.32l868.864 0c10.24 0 16.384 6.144 16.384 16.32L961.472 725.76z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xiaidu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M767.104 959.936c-5.344 0-10.688-1.344-15.52-4.032l-241.312-133.856-241.824 133.024c-10.72 5.92-23.904 5.152-33.888-1.92-10.016-7.072-15.104-19.264-13.12-31.328l46.88-284.736-196.448-202.08c-8.256-8.512-11.168-20.928-7.456-32.192 3.68-11.296 13.312-19.616 25.024-21.632l155.072-26.592c17.632-2.944 33.984 8.736 36.96 26.144 2.976 17.408-8.704 33.952-26.144 36.96l-95.168 16.32 165.344 170.08c7.072 7.296 10.272 17.504 8.64 27.488l-38.816 235.68 199.616-109.824c9.632-5.312 21.344-5.312 30.944 0.064l199.168 110.464-38.016-235.776c-1.632-10.016 1.632-20.224 8.704-27.456l164.672-168.256-225.664-34.816c-10.56-1.632-19.584-8.416-24.128-18.08l-99.2-212.384-100.064 211.84c-7.552 16-26.624 22.816-42.624 15.264-15.968-7.552-22.816-26.624-15.264-42.624l129.152-273.44c5.312-11.2 16.576-18.336 28.928-18.336 0 0 0.032 0 0.064 0 12.416 0.032 23.68 7.232 28.928 18.464l120.8 258.624 270.336 41.728c11.872 1.824 21.696 10.144 25.504 21.504 3.776 11.36 0.864 23.936-7.488 32.48l-196.928 201.216 45.92 284.864c1.952 12.096-3.2 24.256-13.216 31.296C780 958.016 773.568 959.936 767.104 959.936z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-dianying" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 394.811c59.352 0 107.639-48.287 107.639-107.638S571.352 179.536 512 179.536s-107.637 48.287-107.637 107.637S452.648 394.811 512 394.811z m0-164.11c31.14 0 56.473 25.333 56.473 56.472S543.14 343.646 512 343.646s-56.472-25.333-56.472-56.473S480.86 230.701 512 230.701zM619.637 737.796c0-59.351-48.286-107.638-107.638-107.638-59.352 0-107.638 48.287-107.638 107.638 0 59.351 48.287 107.638 107.638 107.638 59.353 0 107.638-48.287 107.638-107.638z m-164.11 0c0-31.14 25.334-56.473 56.473-56.473s56.473 25.333 56.473 56.473S543.14 794.269 512 794.269s-56.472-25.334-56.472-56.473zM736.827 617.892c59.351 0 107.638-48.287 107.638-107.638s-48.287-107.637-107.638-107.637-107.639 48.285-107.639 107.637 48.287 107.638 107.639 107.638z m0-164.11c31.139 0 56.473 25.333 56.473 56.472 0 31.138-25.334 56.472-56.473 56.472s-56.474-25.334-56.474-56.472c0-31.139 25.334-56.472 56.474-56.472zM286.203 407.078c-59.351 0-107.637 48.287-107.637 107.638s48.287 107.637 107.637 107.637 107.638-48.286 107.638-107.637-48.286-107.638-107.638-107.638z m0 164.11c-31.139 0-56.472-25.334-56.472-56.472 0-31.14 25.333-56.472 56.472-56.472s56.473 25.333 56.473 56.472c0 31.138-25.333 56.472-56.473 56.472z"  ></path>' +
    '' +
    '<path d="M949.238 932.579H725.907c44.138-22.45 84.282-51.622 119.667-87.006 43.316-43.315 77.326-93.763 101.088-149.94 24.606-58.177 37.082-119.959 37.082-183.633 0-63.674-12.476-125.456-37.082-183.632C922.9 272.19 888.89 221.742 845.574 178.427 802.258 135.11 751.81 101.1 695.632 77.338c-58.176-24.605-119.958-37.082-183.631-37.082S386.545 52.732 328.369 77.338C272.19 101.1 221.743 135.111 178.427 178.427 135.11 221.743 101.1 272.19 77.338 328.367 52.733 386.545 40.256 448.327 40.256 512c0 63.674 12.476 125.456 37.082 183.632 23.762 56.178 57.773 106.626 101.089 149.941 43.316 43.317 93.763 77.327 149.942 101.089 58.176 24.606 119.958 37.082 183.632 37.082 2.42 0 4.837-0.024 7.252-0.06 0.553 0.036 1.11 0.06 1.671 0.06H949.24c14.13 0 25.583-11.454 25.583-25.582s-11.455-25.583-25.585-25.583zM214.606 809.394c-38.633-38.634-68.963-83.615-90.144-133.694-21.925-51.834-33.04-106.912-33.04-163.7s11.115-111.866 33.04-163.7c21.181-50.079 51.51-95.06 90.144-133.693 38.634-38.634 83.614-68.963 133.694-90.144 51.834-21.925 106.912-33.04 163.7-33.04 56.788 0 111.865 11.115 163.7 33.04 50.079 21.181 95.061 51.51 133.694 90.144 38.633 38.633 68.963 83.614 90.144 133.693 21.925 51.834 33.04 106.912 33.04 163.7s-11.115 111.866-33.04 163.7c-21.181 50.079-51.51 95.061-90.144 133.694-38.634 38.633-83.615 68.963-133.694 90.144-51.834 21.925-106.912 33.04-163.7 33.04-56.79 0-111.866-11.115-163.7-33.04-50.08-21.181-95.06-51.51-133.694-90.144z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)